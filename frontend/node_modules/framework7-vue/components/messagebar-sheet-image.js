import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderSlot as _renderSlot, normalizeClass as _normalizeClass } from "vue";
const _hoisted_1 = ["checked"];
const _hoisted_2 = /*#__PURE__*/_createElementVNode("i", {
  class: "icon icon-checkbox"
}, null, -1);
const _hoisted_3 = ["src"];
function render(_ctx, _cache) {
  return _openBlock(), _createElementBlock("label", {
    class: _normalizeClass(_ctx.classes)
  }, [_createElementVNode("input", {
    type: "checkbox",
    checked: _ctx.checked,
    onChange: _cache[0] || (_cache[0] = function () {
      return _ctx.onChange && _ctx.onChange(...arguments);
    })
  }, null, 40, _hoisted_1), _hoisted_2, _ctx.image ? (_openBlock(), _createElementBlock("img", {
    key: 0,
    src: _ctx.image
  }, null, 8, _hoisted_3)) : _createCommentVNode("", true), _renderSlot(_ctx.$slots, "default")], 2);
}
import { computed } from 'vue';
import { classNames } from '../shared/utils.js';
import { colorClasses, colorProps } from '../shared/mixins.js';
export default {
  name: 'f7-messagebar-sheet-image',
  render,
  props: {
    image: String,
    checked: Boolean,
    ...colorProps
  },
  emits: ['checked', 'unchecked', 'change', 'update:checked'],
  setup(props, _ref) {
    let {
      emit
    } = _ref;
    const onChange = event => {
      if (event.target.checked) emit('checked', event);else emit('unchecked', event);
      emit('update:checked', event.target.checked);
      emit('change', event);
    };
    const classes = computed(() => classNames('messagebar-sheet-image', 'checkbox', colorClasses(props)));
    return {
      classes,
      onChange
    };
  }
};