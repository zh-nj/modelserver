
import { ComponentOptionsMixin, DefineComponent, PropType } from 'vue';


declare const App: DefineComponent<
  {
    
    store: {
      type: ObjectConstructor;
    },

    name: {
      type: any;
      default: undefined;
    },

    theme: {
      type: any;
      default: undefined;
    },

    routes: {
      type: any;
      default: () => [];
    },

    darkMode: {
      type: BooleanConstructor | StringConstructor | any;
      default: boolean;
    },

    colors: {
      type: any;
      default: () => undefined;
    },

    lazyModulesPath: {
      type: any;
      default: undefined;
    },

    initOnDeviceReady: {
      type: any;
      default: undefined;
    },

    iosTranslucentBars: {
      type: any;
      default: undefined;
    },

    iosTranslucentModals: {
      type: any;
      default: undefined;
    },

    userAgent: {
      type: any;
      default: undefined;
    },

    url: {
      type: any;
      default: undefined;
    },

    accordion: {
      type: any;
      default: () => undefined;
    },

    actions: {
      type: any;
      default: () => undefined;
    },

    areaChart: {
      type: any;
      default: () => undefined;
    },

    autocomplete: {
      type: any;
      default: () => undefined;
    },

    calendar: {
      type: any;
      default: () => undefined;
    },

    card: {
      type: any;
      default: () => undefined;
    },

    colorPicker: {
      type: any;
      default: () => undefined;
    },

    dialog: {
      type: any;
      default: () => undefined;
    },

    form: {
      type: any;
      default: () => undefined;
    },

    gauge: {
      type: any;
      default: () => undefined;
    },

    infiniteScroll: {
      type: any;
      default: () => undefined;
    },

    input: {
      type: any;
      default: () => undefined;
    },

    listIndex: {
      type: any;
      default: () => undefined;
    },

    loginScreen: {
      type: any;
      default: () => undefined;
    },

    messagebar: {
      type: any;
      default: () => undefined;
    },

    messages: {
      type: any;
      default: () => undefined;
    },

    navbar: {
      type: any;
      default: () => undefined;
    },

    notification: {
      type: any;
      default: () => undefined;
    },

    panel: {
      type: any;
      default: () => undefined;
    },

    photoBrowser: {
      type: any;
      default: () => undefined;
    },

    picker: {
      type: any;
      default: () => undefined;
    },

    pieChart: {
      type: any;
      default: () => undefined;
    },

    popover: {
      type: any;
      default: () => undefined;
    },

    popup: {
      type: any;
      default: () => undefined;
    },

    range: {
      type: any;
      default: () => undefined;
    },

    searchbar: {
      type: any;
      default: () => undefined;
    },

    sheet: {
      type: any;
      default: () => undefined;
    },

    smartSelect: {
      type: any;
      default: () => undefined;
    },

    sortable: {
      type: any;
      default: () => undefined;
    },

    statusbar: {
      type: any;
      default: () => undefined;
    },

    stepper: {
      type: any;
      default: () => undefined;
    },

    swipeout: {
      type: any;
      default: () => undefined;
    },

    textEditor: {
      type: any;
      default: () => undefined;
    },

    toast: {
      type: any;
      default: () => undefined;
    },

    toolbar: {
      type: any;
      default: () => undefined;
    },

    tooltip: {
      type: any;
      default: () => undefined;
    },

    view: {
      type: any;
      default: () => undefined;
    },

    virtualList: {
      type: any;
      default: () => undefined;
    },

    clicks: {
      type: any;
      default: () => undefined;
    },

    serviceWorker: {
      type: any;
      default: () => undefined;
    },

    touch: {
      type: any;
      default: () => undefined;
    },

    color: {
      type: StringConstructor;
    },

    colorTheme: {
      type: StringConstructor;
    },

    textColor: {
      type: StringConstructor;
    },

    bgColor: {
      type: StringConstructor;
    },

    borderColor: {
      type: StringConstructor;
    },

    rippleColor: {
      type: StringConstructor;
    },

    dark: {
      type: BooleanConstructor;
    }
  },
  () => JSX.Element,
  unknown,
  {},
  {},
  ComponentOptionsMixin,
  ComponentOptionsMixin,
  
>;

export default App;
  